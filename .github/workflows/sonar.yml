name: SonarCloud Analysis
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m venv
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests with coverage
        run: |
          pytest tests/ --cov=src --cov-report=xml:coverage/coverage.xml
          mkdir reports
          bandit -r src --format json -o reports/bandit-report.json --exit-zero
          pylint src --output-format=json > reports/pylint-report.json
      - name: Set up WireGuard
        uses: egor-tensin/setup-wireguard@v1
        with:
          endpoint: '${{ secrets.WIREGUARD_ENDPOINT }}'
          endpoint_public_key: '${{ secrets.WIREGUARD_ENDPOINT_PUBLIC }}'
          ips: '${{ secrets.WIREGUARD_IPS }}'
          allowed_ips: '${{ secrets.WIREGUARD_ALLOWED_IPS }}'
          private_key: '${{ secrets.WIREGUARD_PRIVATE }}'
          preshared_key: '${{ secrets.WIREGUARD_PRESHARED }}'
      - name: Configure hostname resolution
        run: |
          echo "10.192.1.254 sonar.al3xar.internal" | sudo tee -a /etc/hosts
          cat /etc/hosts | grep sonar.al3xar.internal
      - uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

